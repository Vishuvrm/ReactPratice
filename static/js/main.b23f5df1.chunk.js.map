{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alerts.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","react_default","a","createElement","className","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","style","bg_dark_style","aria-labelledby","data-bs-parent","bg_text_box","Navbar","concat","dark","href","title","aria-label","aria-current","backgroundColor","onClick","setTheme","role","aria-checked","toggleStyle","htmlFor","defaultProps","text_area_style","height","styles_biu","bold","fontWeight","italic","fontStyle","underline","textDecorationLine","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","_useState3","_useState4","selected_text","set_selected","_useState5","_useState6","action","set_action","_useState7","_useState8","text_style","set_text_style","_useState9","_useState10","bold_button_text","set_bold_text","Fragment","assign","onChange","event","target","value","console","log","header","alert","selected","window","getSelection","toString","newText","toUpperCase","replace","toLowerCase","document","getElementById","navigator","clipboard","writeText","msg","SpeechSynthesisUtterance","speechSynthesis","speak","length","split","slice","Alerts","data-bs-dismiss","App","color","setBgDarkStyle","setBgTextBox","setDark","setAlert","colorSchema","setColorSchema","showAlert","message","setTimeout","setInterval","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.b23f5df1.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function About(props) {\n  return (\n    <div className=\"container\">\n      <h2>About us</h2>\n      <div className=\"accordion\" id=\"accordionExample\">\n        <div className=\"accordion-item\">\n          <h2 className=\"accordion-header\" id=\"headingOne\">\n            <button\n              className=\"accordion-button\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#collapseOne\"\n              aria-expanded=\"true\"\n              aria-controls=\"collapseOne\"\n              style={props.bg_dark_style}\n            >\n              Accordion Item #1\n            </button>\n          </h2>\n          <div\n            id=\"collapseOne\"\n            className=\"accordion-collapse collapse show\"\n            aria-labelledby=\"headingOne\"\n            data-bs-parent=\"#accordionExample\"\n          >\n            <div className=\"accordion-body\" style={props.bg_text_box}>\n              <strong>This is the first item's accordion body.</strong> It is\n              shown by default, until the collapse plugin adds the appropriate\n              classNamees that we use to style each element. These classNamees\n              control the overall appearance, as well as the showing and hiding\n              via CSS transitions. You can modify any of this with custom CSS or\n              overriding our default variables. It's also worth noting that just\n              about any HTML can go within the <code>.accordion-body</code>,\n              though the transition does limit overflow.\n            </div>\n          </div>\n        </div>\n        <div className=\"accordion-item\">\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\n            <button\n              className=\"accordion-button collapsed\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#collapseTwo\"\n              aria-expanded=\"false\"\n              aria-controls=\"collapseTwo\"\n              style={props.bg_dark_style}\n            >\n              Accordion Item #2\n            </button>\n          </h2>\n          <div\n            id=\"collapseTwo\"\n            className=\"accordion-collapse collapse\"\n            aria-labelledby=\"headingTwo\"\n            data-bs-parent=\"#accordionExample\"\n          >\n            <div className=\"accordion-body\" style={props.bg_text_box}>\n              <strong>This is the second item's accordion body.</strong> It is\n              hidden by default, until the collapse plugin adds the appropriate\n              classNamees that we use to style each element. These classNamees\n              control the overall appearance, as well as the showing and hiding\n              via CSS transitions. You can modify any of this with custom CSS or\n              overriding our default variables. It's also worth noting that just\n              about any HTML can go within the <code>.accordion-body</code>,\n              though the transition does limit overflow.\n            </div>\n          </div>\n        </div>\n        <div className=\"accordion-item\">\n          <h2 className=\"accordion-header\" id=\"headingThree\">\n            <button\n              className=\"accordion-button collapsed\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#collapseThree\"\n              aria-expanded=\"false\"\n              aria-controls=\"collapseThree\"\n              style={props.bg_dark_style}\n            >\n              Accordion Item #3\n            </button>\n          </h2>\n          <div\n            id=\"collapseThree\"\n            className=\"accordion-collapse collapse\"\n            aria-labelledby=\"headingThree\"\n            data-bs-parent=\"#accordionExample\"\n          >\n            <div className=\"accordion-body\" style={props.bg_text_box}>\n              <strong>This is the third item's accordion body.</strong> It is\n              hidden by default, until the collapse plugin adds the appropriate\n              classNamees that we use to style each element. These classNamees\n              control the overall appearance, as well as the showing and hiding\n              via CSS transitions. You can modify any of this with custom CSS or\n              overriding our default variables. It's also worth noting that just\n              about any HTML can go within the <code>.accordion-body</code>,\n              though the transition does limit overflow.\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","// We need react function based componet... Write the shortcut \"rfc\"\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\n\nexport default function Navbar(props) {\n  return (\n    <nav\n      className={`navbar navbar-expand-lg bg-${props.dark ? \"dark\" : \"light\"}`}\n    >\n      <div className=\"container-fluid\">\n        <a\n          className={`navbar-brand text-${props.dark ? \"light\" : \"dark\"}`}\n          href=\"/\"\n        >\n          {props.title}\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <a\n                className={`nav-link active text-${\n                  props.dark ? \"light\" : \"dark\"\n                }`}\n                aria-current=\"page\"\n                href=\"/\"\n              >\n                Home\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a\n                className={`nav-link active text-${\n                  props.dark ? \"light\" : \"dark\"\n                }`}\n                href=\"/about\"\n              >\n                About\n              </a>\n            </li>\n          </ul>\n        </div>\n        {/* <form className=\"d-flex\" role=\"search\"> */}\n          {/* <input\n              className=\"form-control me-2\"\n              type=\"search\"\n              placeholder=\"Search\"\n              aria-label=\"Search\"\n            />\n            <button className=\"btn btn-outline-success\" type=\"submit\">\n              Search\n            </button> */}\n          <div className=\"btn-group px-4 d-flex\" id=\"navbarNav\">\n            <button className=\"btn btn-round\" style={{\"backgroundColor\": \"#6f0808\"}} onClick={()=>props.setTheme(\"#6f0808\")}/>\n            <button className=\"btn btn-round\" style={{\"backgroundColor\": \"#0a4c86\"}} onClick={()=>props.setTheme(\"#0a4c86\")}/>\n            <button className=\"btn btn-round\" style={{\"backgroundColor\":\"#a67f09\"}} onClick={()=>props.setTheme(\"#a67f09\")}/>\n            <button className=\"btn btn-round\" style={{\"backgroundColor\": \"#056639\"}} onClick={()=>props.setTheme(\"#056639\")}/>\n            <button className=\"btn btn-round\" style={{\"backgroundColor\": \"#5f0875\"}} onClick={()=>props.setTheme(\"#5f0875\")}/>\n          </div>\n          \n\n          <div className=\"form-check form-switch\">\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              role=\"switch\"\n              aria-checked\n              id=\"flexSwitchCheckDefault\"\n              onClick={props.toggleStyle}\n            />\n            <label\n              className={`form-check-label text-${\n                props.dark ? \"light\" : \"dark\"\n              }`}\n              htmlFor=\"flexSwitchCheckDefault\"\n            >\n              Enable dark mode\n            </label>\n          </div>\n        {/* </form> */}\n      </div>\n    </nav>\n  );\n}\n\nNavbar.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nNavbar.defaultProps = {\n  title: \"Unknown\",\n};\n","import React, { useState } from \"react\";\n\nlet text_area_style = {\n  height: \"177px\",\n};\n\nconst styles_biu = {\n  bold: { fontWeight: \"bold\" },\n  italic: { fontStyle: \"italic\" },\n  underline: { textDecorationLine: \"underline\" },\n};\n\nexport default function TextForm(props) {\n  const [text, setText] = useState(\"\");\n  const [selected_text, set_selected] = useState(\"\");\n  const [action, set_action] = useState(\"\");\n  const [text_style, set_text_style] = useState(\"\");\n  const [bold_button_text, set_bold_text] = useState(\"ToBold\");\n  const reading_per_word = 0.08;\n\n  const speak = () => {\n    props.alert(\"Its speaking now!\", \"warning\")\n    let msg = new SpeechSynthesisUtterance();\n    msg.text = text;\n    window.speechSynthesis.speak(msg);\n  };\n\n  const to_upper = () => {\n    // console.log(\"Upper case was clicked!\");\n    props.alert(\"Converted to upper case!\", \"success\")\n    set_action(\"To Upper case\");\n    var selected = window.getSelection().toString();\n    set_selected(selected);\n\n    if (selected === \"\") {\n      let newText = text.toUpperCase();\n      setText(newText);\n    } else {\n      let newText = text.replace(selected, selected.toUpperCase());\n      setText(newText);\n    }\n  };\n\n  const copyText = () => {\n    props.alert(\"Text copied!\", \"success\")\n    var element = document.getElementById(\"floatingTextarea\")\n    var text = element.value\n    navigator.clipboard.writeText(text)\n  }\n\n  const clearText = () => {\n    props.alert(\"Text cleared!\", \"danger\")\n    setText(\"\")\n  }\n  \n  const to_lower = () => {\n    props.alert(\"Converted to lower case!\", \"primary\")\n\n    set_action(\"To Lower case\");\n    var selected = window.getSelection().toString();\n    set_selected(selected);\n\n    if (selected === \"\") {\n      let newText = text.toLowerCase();\n      setText(newText);\n    } else {\n      let newText = text.replace(selected, selected.toLowerCase());\n      setText(newText);\n    }\n  };\n\n  const to_bold = () => {\n    //   var selected = window.getSelection().toString()\n    //   set_selected(selected)\n    //   let bold_text = text.replace(selected, \"<b>\"+selected_text+\"</b>\")\n    //   console.log()\n\n    //Gets the value for bold formatting of selected text.\n    // let bold = documenteditor.selection.characterFormat.bold;\n    // //Sets bold formatting for selected text.\n    // documenteditor.selection.characterFormat.bold = true;\n    if (bold_button_text === \"ToBold\") {\n      props.alert(\"Text bolded!\", \"primary\")\n\n      set_text_style(\"bold\");\n      set_action(\"To bold\");\n      set_bold_text(\"UnBold\");\n    } else if (bold_button_text === \"UnBold\") {\n      props.alert(\"Text unbolded!\", \"primary\")\n\n      set_text_style(\"\");\n      set_action(\"Unbold\");\n      set_bold_text(\"ToBold\");\n    }\n  };\n\n  const handle_on_change = (event) => {\n    // console.log(\"on change\");\n    setText(event.target.value);\n    console.log(\"SELECTED = \" + selected_text);\n  };\n  return (\n    <>\n      <div>\n        \n        <div className=\"form-floating\">\n          <textarea\n            className=\"form-control\"\n            id=\"floatingTextarea\"\n            style={Object.assign({}, text_area_style, styles_biu[text_style], props.bg_text_box)}\n            onChange={handle_on_change}\n            value={text}\n          ></textarea>\n          <label htmlFor=\"floatingTextarea\">{props.header}</label>\n        </div>\n        <div className=\"container\">\n          <button className=\"btn btn-primary my-2\" onClick={to_upper}>\n            ToUpper\n          </button>\n          <button className=\"btn btn-primary my-2 mx-2\" onClick={to_lower}>\n            ToLower\n          </button>\n          <button className=\"btn btn-primary my-2 mx-1\" onClick={to_bold}>\n            {bold_button_text}\n          </button>\n          <button className=\"btn btn-primary my-2 mx-2\" onClick={copyText}>\n            copy\n          </button>\n          <button className=\"btn btn-primary my-2 mx-2\" onClick={clearText}>\n            clear\n          </button>\n          <button\n            type=\"submit\"\n            onClick={speak}\n            className=\"btn btn-warning mx-2 my-2\"\n          >\n            Speak\n          </button>\n        </div>\n\n        <div className=\"container my-3\">\n          <h3>\n            <u>Your text summary:</u>\n          </h3>\n          <p>\n            <b>Total characters: </b>\n            {text.length}\n          </p>\n          <p>\n            <b>Total words: </b>\n            {text.split(\" \").length}\n          </p>\n          <p>\n            <b>Selected text: </b>\n            {selected_text}\n          </p>\n          <p>\n            <b>Count: </b>\n            {selected_text.length}\n          </p>\n          <p>\n            <b>Action: </b>\n            {action}\n          </p>\n          <p>\n            <b>Approx reading minutes: </b>\n            {reading_per_word * text.split(\" \").length} min\n          </p>\n\n          <h3>Preview</h3>\n          <p>{text.length > 0? `${text.slice(0, 200)}...` : \"Your text preview will be shown here\"}</p>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function Alerts(props) {\n  return (\n    props.alert && (\n      <div>\n        <div\n          className={`alert alert-${props.alert.type} alert-dismissible fade show`}\n          role=\"alert\"\n        >\n          <strong>{props.alert.msg}</strong>\n          <button\n            type=\"button\"\n            className=\"btn-close\"\n            data-bs-dismiss=\"alert\"\n            aria-label=\"Close\"\n          ></button>\n        </div>\n      </div>\n    )\n  );\n}\n","// import logo from './logo.svg';\n// import './App.css';\n\nimport React from \"react\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport { useState } from \"react\";\nimport Alerts from \"./components/Alerts\";\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nlet a = \"Text Utilities\";\n\nfunction App() {\n  const [bg_dark_style, setBgDarkStyle] = useState({\n    color: \"black\",\n    backgroundColor: \"white\",\n  });\n  const [bg_text_box, setBgTextBox] = useState({\n    color: \"black\",\n    backgroundColor: \"white\",\n  });\n  const [dark, setDark] = useState(false);\n\n  const [alert, setAlert] = useState(null);\n\n  const [colorSchema, setColorSchema] = useState(null);\n\n  const setTheme = (color) => {\n    setColorSchema(true);\n\n    if (color === \"#6f0808\") {\n      setBgDarkStyle({\n        color: \"white\",\n        backgroundColor: \"#6f0808\",\n      });\n    } else if (color === \"#0a4c86\") {\n      setBgDarkStyle({\n        color: \"white\",\n        backgroundColor: \"#0a4c86\",\n      });\n    } else if (color === \"#a67f09\") {\n      setBgDarkStyle({\n        color: \"white\",\n        backgroundColor: \"#a67f09\",\n      });\n    } else if (color === \"#056639\") {\n      setBgDarkStyle({\n        color: \"white\",\n        backgroundColor: \"#056639\",\n      });\n    } else if (color === \"#5f0875\") {\n      setBgDarkStyle({\n        color: \"white\",\n        backgroundColor: \"#5f0875\",\n      });\n    }\n  };\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  };\n\n  const toggleStyle = () => {\n    if (\n      (bg_dark_style.color === \"white\" &&\n        bg_dark_style.backgroundColor === \"#082042\") ||\n      colorSchema === true\n    ) {\n      setColorSchema(null);\n      setBgDarkStyle({\n        color: \"black\",\n        backgroundColor: \"white\",\n      });\n      setDark(false);\n      showAlert(\"Light mode enabled!\", \"success\");\n    } else {\n      setColorSchema(null);\n      setBgDarkStyle({\n        color: \"white\",\n        backgroundColor: \"#082042\",\n      });\n      setDark(true);\n      showAlert(\"Dark mode enabled!\", \"success\");\n    }\n\n    if (\n      bg_text_box.color === \"black\" &&\n      bg_text_box.backgroundColor === \"white\"\n    ) {\n      setBgTextBox({\n        color: \"white\",\n        backgroundColor: \"grey\",\n      });\n    } else {\n      setColorSchema(null);\n      setBgTextBox({\n        color: \"black\",\n        backgroundColor: \"white\",\n      });\n    }\n\n    setInterval(() => {\n      document.title = \"TextUtils is amazing!\";\n    }, 2000);\n\n    setInterval(() => {\n      document.title = \"Download now!\";\n    }, 3001);\n  };\n\n  return (\n    <>\n      <div style={bg_dark_style}>\n        {/* <Router> */}\n          <Navbar\n            title={a}\n            toggleStyle={toggleStyle}\n            setTheme={setTheme}\n            dark={dark}\n          />\n          <Alerts alert={alert} />\n          {/* <Routes> */}\n            {/* <div className=\"container my-5\"> */}\n            {/* <Route\n              exact\n              path=\"/\"\n              element={ */}\n                <div className=\"container my-5\">\n                  <TextForm\n                    header=\"Enter the text to analyze...\"\n                    bg_text_box={bg_text_box}\n                    alert={showAlert}\n                  ></TextForm>\n                </div>\n              {/* }\n            /> */}\n            {/* <Route\n              exact\n              path=\"/home\"\n              element={ */}\n                <div className=\"container my-5\">\n                  <TextForm\n                    header=\"Enter the text to analyze...\"\n                    bg_text_box={bg_text_box}\n                    alert={showAlert}\n                  ></TextForm>\n                </div>\n              {/* }\n            /> */}\n            {/* </div> */}\n\n            {/* <Route\n              exact\n              path=\"/about\"\n              element={ */}\n                <About\n                  bg_text_box={bg_text_box}\n                  bg_dark_style={bg_dark_style}\n              //   />\n              // }\n            />\n          {/* </Routes>\n        </Router> */}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}